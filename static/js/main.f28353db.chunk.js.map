{"version":3,"sources":["components/Navbar/Navbar.js","components/TaskItem/TaskItem.js","img/plus-icon.svg","components/TaskList/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","TaskItem","id","title","taskState","onTaskUpdate","onDeleteTask","useState","isEditing","setIsEditing","editableTitle","setEditableTitle","type","value","onChange","event","newTitle","target","onKeyPress","key","length","onClick","e","TaskList","onAddTask","tasks","map","task","state","src","plusIcon","alt","idAcc","App","setTasks","addTask","newTask","existingTasks","updateTask","console","log","deleteTask","exitingTasks","filter","t","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f28353db.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./navbar.css\";\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <span>React Kanban</span>\n    </nav>\n  );\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./taskitem.css\";\n\nexport default function TaskItem({ \n  id, \n  title, \n  taskState, \n  onTaskUpdate,\n  onDeleteTask }) {\n  \n  const [isEditing, setIsEditing] = useState(false);\n  const [editableTitle, setEditableTitle] = useState(title);\n\n  const onTitleChange = (event) => {\n    const newTitle = event.target.value;\n    setEditableTitle(newTitle);\n    onTaskUpdate(id, newTitle, taskState);\n  };\n\n  const onKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      setIsEditing(false);\n      if (editableTitle.length === 0) {\n        onDeleteTask(id);\n      }\n      }\n  }\n\n  const onTaskStateChange = (event) => {\n    onTaskUpdate(id, title, event.target.value);\n  };\n  \n  if (isEditing) {\n    return (\n      <div className=\"task-item\">\n        <input\n          type=\"text\"\n          value={editableTitle}\n          onChange={onTitleChange}\n          onKeyPress={onKeyPress}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"task-item\">\n        <div onClick={(e) => setIsEditing(true)}>{editableTitle}</div>\n        <select onChange={onTaskStateChange} value={taskState}>\n          <option value=\"Pendente\">Pendente</option>\n          <option value=\"Fazendo\">Fazendo</option>\n          <option value=\"Completa\">Completa</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nTaskItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  taskState: PropTypes.string.isRequired,\n};","export default __webpack_public_path__ + \"static/media/plus-icon.b030f6ae.svg\";","import React from \"react\";\nimport \"./tasklist.css\";\nimport PropTypes from \"prop-types\";\nimport TaskItem from \"../TaskItem/TaskItem\";\nimport plusIcon from \"../../img/plus-icon.svg\";\n\nexport default function TaskList({ \n  title, \n  taskState, \n  onAddTask, \n  tasks, \n  onTaskUpdate,\n  onDeleteTask,\n  }) {\n  \n  const addTask = () => {\n    onAddTask(\"Nova Tarefa\", taskState);\n  };\n  \n  return (\n    <div className=\"tasklist\">\n      <div className=\"title\">{title}\n        <div className=\"content\">\n        { tasks.map((task) => (\n          <TaskItem\n          key={task.id}\n          id={task.id}\n          title={task.title}\n          taskState={task.state}\n          onTaskUpdate={onTaskUpdate}\n          onDeleteTask={onDeleteTask} \n        />\n        ))}\n        {tasks.length === 0 && <div className=\"empty-list\">Lista Vazia</div>}\n        <button onClick={addTask} className=\"btn\">\n          <img src={plusIcon} alt=\"plus\" />\n          Adicionar nova tarefa\n        </button>\n        </div>     \n      </div> \n    </div>\n  )\n}\n\nTaskList.propTypes = {\n  title: PropTypes.string.isRequired,\n  onAddTask: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n};\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport TaskList from \"./components/TaskList/TaskList\";\n//teste\nlet idAcc = 0;\nconst generateId = () => {\n  idAcc = idAcc + 1;\n  return idAcc;\n};\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (title, state) => {\n    const newTask = {\n      id: generateId(),\n      title,\n      state\n    };\n    setTasks((existingTasks) => {\n      return [...existingTasks, newTask];\n    });\n  };\n\n  const updateTask = (id, title, state) => {\n    console.log('hello');\n    setTasks((existingTasks) => {\n      return existingTasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, title, state };\n        } else {\n          return task;\n        }\n      });\n    });\n  };\n  \n  const deleteTask = (id) => {\n    setTasks((exitingTasks) => {\n      return exitingTasks.filter((task) => task.id !== id);\n    });\n  };\n  \n  return (\n    <div className=\"App\">\n      <div>\n        <Navbar />\n        <div className=\"container\">\n          <TaskList \n            title=\"Pendente\" \n            onAddTask={addTask}\n            taskState=\"Pendente\"\n            tasks={tasks.filter((t) => t.state === \"Pendente\")}\n            onTaskUpdate={updateTask}\n            onDeleteTask={deleteTask}\n          />\n          <TaskList \n            title=\"Fazendo\" \n            onAddTask={addTask}\n            taskState=\"Fazendo\"\n            tasks={tasks.filter((t) => t.state === \"Fazendo\")}\n            onTaskUpdate={updateTask}\n            onDeleteTask={deleteTask}\n          />\n          <TaskList \n            title=\"Completa\" \n            onAddTask={addTask}\n            taskState=\"Completa\"\n            tasks={tasks.filter((t) => t.state === \"Completa\")}\n            onTaskUpdate={updateTask}\n            onDeleteTask={deleteTask}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}